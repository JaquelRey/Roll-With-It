{"version":3,"sources":["utils/reducers.js","utils/actions.js","utils/GlobalState.js","assets/dnd.jpg","assets/dndsheet.webp","pages/Home/index.js","utils/mutations.js","utils/auth.js","pages/Login/index.js","components/Header/Nav/index.js","components/Header/index.js","pages/NoMatch/index.js","pages/Signup/index.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","type","AppContext","createContext","Provider","AppProvider","value","initialState","props","useReducer","dispatch","Home","className","style","backgroundImage","BannerImage","src","DemoSheet","alt","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","name","to","onSubmit","htmlFor","placeholder","id","onChange","Nav","Header","loggedIn","href","onClick","logout","NoMatch","Signup","addUser","firstName","lastName","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5fb861c6.chunk.js","sourcesContent":["import { useReducer } from 'react';\nimport {\n\tSAMPLE_ACTION\n} from './actions';\n\n// TODO: To get a better understand of how a reducer works - add comments to the various actions in the reducer\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase SAMPLE_ACTION:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport function useAppReducer(initialState) {\n\treturn useReducer(reducer, initialState);\n}\n","export const SAMPLE_ACTION = 'SAMPLE_ACTION'\n","import React, { createContext, useContext } from \"react\";\nimport { useAppReducer } from './reducers'\n\nconst AppContext = createContext();\nconst { Provider } = AppContext;\n\nconst AppProvider = ({ value = [], ...props }) => {\n\tconst [state, dispatch] = useAppReducer({\n\n\t});\n\n\treturn <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useAppContext = () => {\n\treturn useContext(AppContext);\n};\n\nexport { AppProvider, useAppContext };\n","export default __webpack_public_path__ + \"static/media/dnd.5a33f684.jpg\";","export default __webpack_public_path__ + \"static/media/dndsheet.0a7b4862.webp\";","import { Link} from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport BannerImage from '../../assets/dnd.jpg';\nimport DemoSheet from '../../assets/dndsheet.webp';\n\nconst Home = () => {\n\treturn (\n\t\t<div className=\"Home\">\n\t\t\t<div \n\t\t\tclassName=\"headerContainer\"\n\t\t\t style={{backgroundImage: `url(${BannerImage })` }}\n\t\t\t \n\t\t\t >\n\t\t\t\t<h1>Just Roll with it</h1>\n\t\t\t\t<p>\"Lorem ipsum dolor sit amet, consectetur dipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n\t\t\t\t\tUt enim ad minim veniam,\n\t\t\t\t\t quis nostrud exercitation ullamco \n\t\t\t\t\t laboris nisi ut aliquip ex ea \n\t\t\t\t\t commodo consequat\"</p>\n\t\t\t\t\t <div >\n\t\t\t\t\t <button> CREATE CHARACTER</button>\n\t\t\t\t\t </div>\n\n\t\t\t</div>\n\t\t\n\t\t\t<div className=\"demo-sheet\">\n      \t\t\t<img src={DemoSheet} alt=\"dnd character sheet\"/>\n   \t\t\t </div> \n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n\tgetProfile() {\n\t\treturn decode(this.getToken());\n\t}\n\n\tloggedIn() {\n\t\t// Checks if there is a saved token and it's still valid\n\t\tconst token = this.getToken();\n\t\treturn !!token && !this.isTokenExpired(token);\n\t}\n\n\tisTokenExpired(token) {\n\t\ttry {\n\t\t\tconst decoded = decode(token);\n\t\t\tif (decoded.exp < Date.now() / 1000) {\n\t\t\t\treturn true;\n\t\t\t} else return false;\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetToken() {\n\t\t// Retrieves the user token from localStorage\n\t\treturn localStorage.getItem('id_token');\n\t}\n\n\tlogin(idToken) {\n\t\t// Saves user token to localStorage\n\t\tlocalStorage.setItem('id_token', idToken);\n\n\t\twindow.location.assign('/');\n\t}\n\n\tlogout() {\n\t\t// Clear user token and profile data from localStorage\n\t\tlocalStorage.removeItem('id_token');\n\t\t// this will reload the page and reset the state of the application\n\t\twindow.location.assign('/');\n\t}\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\nfunction Login(props) {\n\tconst [formState, setFormState] = useState({ email: '', password: '' });\n\tconst [login, { error }] = useMutation(LOGIN);\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tconst mutationResponse = await login({\n\t\t\t\tvariables: { email: formState.email, password: formState.password },\n\t\t\t});\n\t\t\tconst token = mutationResponse.data.login.token;\n\t\t\tAuth.login(token);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t};\n\n\tconst handleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"container my-1\">\n\t\t\t<Link to=\"/signup\">← Go to Signup</Link>\n\n\t\t\t<h2>Login</h2>\n\t\t\t<form onSubmit={handleFormSubmit}>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"email\">Email address:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"youremail@test.com\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"pwd\">Password:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"******\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"pwd\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{error ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className=\"error-text\">The provided credentials are incorrect</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<div className=\"flex-row flex-end\">\n\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React from \"react\";\nimport Auth from \"../../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\treturn (\n\n\t\t<div>\n\n\n\t\t</div>\n\t\t\n\t);\n}\n\nexport default Nav;\n","import React from \"react\";\r\nimport Nav from './Nav';\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './header.css'\r\n\r\nfunction Header() {\r\n\r\n    function showNavigation() {\r\n        if (Auth.loggedIn()) {\r\n            return (\r\n                <ul className=\"flex-row\">\r\n                    <li className=\"mx-1\">\r\n                        <a href=\"/\" onClick={() => Auth.logout()}>\r\n                            Logout\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        } else {\r\n            return (\r\n                <ul className=\"flex-row\">\r\n                    <li className=\"mx-1\">\r\n                        <Link to=\"/signup\">\r\n                            Signup\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"mx-1\">\r\n                        <Link to=\"/login\">\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"header1\">\r\n                <div className=\"left\">\r\n                    <h1>Roll With It</h1>\r\n                </div>\r\n                <div className=\"middle\">\r\n\r\n                </div>\r\n                <div className=\"right\">\r\n                    {showNavigation()}\r\n                </div>\r\n            </div>\r\n            <Nav />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\n\nconst NoMatch = () => {\n\treturn (\n\t\t<div>\n\n\t\t</div>\n\t);\n};\n\nexport default NoMatch;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../../utils/auth';\nimport { ADD_USER } from '../../utils/mutations';\n\nfunction Signup(props) {\n\tconst [formState, setFormState] = useState({ email: '', password: '' });\n\tconst [addUser] = useMutation(ADD_USER);\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst mutationResponse = await addUser({\n\t\t\tvariables: {\n\t\t\t\temail: formState.email,\n\t\t\t\tpassword: formState.password,\n\t\t\t\tfirstName: formState.firstName,\n\t\t\t\tlastName: formState.lastName,\n\t\t\t},\n\t\t});\n\t\tconst token = mutationResponse.data.addUser.token;\n\t\tAuth.login(token);\n\t};\n\n\tconst handleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"container my-1\">\n\t\t\t<Link to=\"/login\">← Go to Login</Link>\n\n\t\t\t<h2>Signup</h2>\n\t\t\t<form onSubmit={handleFormSubmit}>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"firstName\">First Name:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"First\"\n\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\ttype=\"firstName\"\n\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"lastName\">Last Name:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"Last\"\n\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\ttype=\"lastName\"\n\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"email\">Email:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"youremail@test.com\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"pwd\">Password:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"******\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"pwd\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-row flex-end\">\n\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n\tApolloClient,\n\tInMemoryCache,\n\tApolloProvider,\n\tcreateHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport { AppProvider } from './utils/GlobalState';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Header from './components/Header'\nimport NoMatch from './pages/NoMatch';\nimport Signup from './pages/Signup';\n\nconst httpLink = createHttpLink({\n\turi: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n\tconst token = localStorage.getItem('id_token');\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : '',\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Router>\n\t\t\t\t<div className='screen'>\n\t\t\t\t\t<AppProvider>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\t\telement={<Home />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/login\"\n\t\t\t\t\t\t\t\telement={<Login />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/signup\"\n\t\t\t\t\t\t\t\telement={<Signup />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"*\"\n\t\t\t\t\t\t\t\telement={<NoMatch />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Routes>\n\t\t\t\t\t</AppProvider>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\tif (\n\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bulma/css/bulma.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}